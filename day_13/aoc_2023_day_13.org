
* AOC 2023 Day 13

** Initialize 
#+BEGIN_SRC elisp
  (pyvenv-activate "~/projects/project_venv/")
  ; This is needed to make sure python indentation isn't messed up
  (setq org-src-preserve-indentation t)
#+END_SRC

#+RESULTS:
: t

** Day 13 star 1
*** Notes
- Refers to "each" line of reflection, assume a puzzle can have multiple but each line can only have one

- #.##..##.
- ..#.##.#.
- ##......#
- ##......#
- ..#.##.#.
- ..##..##.
- #.#.##.#.

    123456789
- 1 #...##..# 1
- 2 #....#..# 2
- 3 ..##..### 3
- 4v#####.##.v4
- 5^#####.##.^5
- 6 ..##..### 6
- 7 #....#..# 7

Sample 3 has one where I'm finding no matches


*** Solution
#+BEGIN_SRC python :results output
import re
from d13_utils import load_grid_from_str, dump_grid, Grid,P

def check_column(grid: Grid, c: int) -> int:
    w = 0
    while c-w >= 0 and c+w+1 < grid.size.width:
        for r in range(0,grid.size.height):
            if grid.cells[P(x=c-w,y=r)] != grid.cells[P(x=c+w+1,y=r)]:
                return w
        w+=1
        
    return w
    
def find_vertical(grid: Grid) -> int:
    longest = 0
    column = -1
    for c in range(0,grid.size.width-1):
        l = check_column(grid,c)
        if l > longest:
            column = c
            longest = l

    return column + 1

def star_1(path: str) -> int:
  total = 0
  with open(path,'r') as f:
    grids = [load_grid_from_str(s) for s in f.read().split("\n\n") if len(s.strip())]

    for grid in grids:
      print('123456789')
      dump_grid(grid)
      print(find_vertical(grid))
      print()
          
  return total
  
print("Star 1:",star_1("sample.txt"))

#+END_SRC

#+RESULTS:
#+begin_example
123456789
#.##..##.
..#.##.#.
##......#
##......#
..#.##.#.
..##..##.
#.#.##.#.
5

123456789
#...##..#
#....#..#
..##..###
#####.##.
#####.##.
..##..###
#....#..#
3

Star 1: 0
#+end_example

** First result -- this is too low
: Star 1: 800
** Second result -- too low
29616

** Day 13 star 2
*** Problem statement
*** Solution
#+BEGIN_SRC python :results output
def star_2(path: str) -> int:
  with open(path,'r') as f:
     pass
  return 0
  
print("Star 2:", star_2("sample.txt"))
#+END_SRC

#+RESULTS:
: Star 2: 0

