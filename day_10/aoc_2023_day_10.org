
* AOC 2023 Day 10

** Initialize 
#+BEGIN_SRC elisp
  (pyvenv-activate "~/projects/project_venv/")
  ; This is needed to make sure python indentation isn't messed up
  (setq org-src-preserve-indentation t)
#+END_SRC

#+RESULTS:
: t

** Day 10 star 1
*** Problem statement
If the animal had entered this loop in the northwest corner, the sketch would instead look like this:

.....
.S-7.
.|.|.
.L-J.
.....

*** Notes
- A graph
- Need to enumerate over all paths, find largest
- Not acyclic
- Each pipe only has _one_ connection
    
*** Solution
#+BEGIN_SRC python :results output
import re
from pydantic import BaseModel
from d10_utils import P,S, Grid, load_grid, dump_grid, find_loop_path

def star_1(path: str, start_char: str) -> int:
  grid = load_grid(path)
  grid.cells[grid.start] = start_char

  path = find_loop_path(grid)
  pg = Grid(size=grid.size, cells={}, start=P())
  for p in path:
      if p == grid.start:
          pg.cells[p] = '*'
      else:
          pg.cells[p] = grid.cells[p]
          
  #dump_grid(pg)
  print(pg.size)
  return len(path)/2
  
star_1("sample.txt","F")
#star_1("input.txt","L")
#+END_SRC

#+RESULTS:
: width=5 height=5


** Star 2
*** Problem
Figure out whether you have time to search for the nest by calculating
the area within the loop. How many tiles are enclosed by the loop?

*** Notes

What I'm missing:

In fact, there doesn't even need to be a full tile path to the outside
for tiles to count as outside the loop - squeezing between pipes is
also allowed! Here, I is still within the loop and O is still outside
the loop:

- ..........
- .S------7.
- .|F----7|.
- .||OOOO||.
- .||OOOO||.
- .|L-7F-J|.
- .|II||II|.
- .L--JL--J.
= ..........

But my solution shows:

- OOOOOOOOOO
- O*------7O
- O|F----7|O
- O||....||O
- O||....||O
- O|L-7F-J|O
- O|..||..|O
- OL--JL--JO
- OOOOOOOOOO

- OOOOOOOOOO
- O*vvvvvv7O
- O>F^^^^7|O
- O><....><O
- O><....><O
- O>L-7FvJ<O
- O>..<>..<O
- OL^^JL^^^JO
- OOOOOOOOOO

because the gap between the pipes is a path out.

Ok, I am just not getting what "inside" means in this case.

How is the o marked # not inside the pipes?

||

-
-

7F

J
7

7L

J
 F

J
 7
 
- OF----7F7F7F7F-7OOOO
- O|F--7||||||||FJOOOO
- O||#FJ||||||||L7OOOO
- FJL7L7LJLJ||LJIL-7OO
- L--J#L7IIILJS7F-7L7O
- OOOOF-JIIF7FJ|L7L7L7
- OOOOL7IF7||L7|IL7L7|
- OOOOO|FJLJ|FJ|F7|OLJ
- OOOOFJL-7O||O||||OOO
- OOOOL---JOLJOLJLJOOO
 
- OFvvvv7F7F7F7F-7OOOO
- O>F^^7||||||||FJOOOO
- O><#FJ||||||||L7OOOO
- FJL7L7LJLJ||LJIL-7OO
- L--JOL7IIILJS7F-7L7O
- OOOOF-JIIF7FJ|L7L7L7
- OOOOL7IF7||L7|IL7L7|
- OOOOO|FJLJ|FJ|F7|OLJ
- OOOOFJL-7O||O||||OOO
- OOOOL---JOLJOLJLJOOO

Ok -- it's a lot more obvious what is going on using unicode but solution still escapes me.

Solultion - flood fill

*** Solution
#+BEGIN_SRC python :results output
import re
from pydantic import BaseModel
from d10_utils import P,S, Grid, load_grid, dump_grid, find_loop_path, RIGHT, DOWN, LEFT, UP, Polygon

BOX_MAPPING = {"|": "│", "7": "┐", "F": "┌", "L": "└","J": "┘","-": "─"}

START_DIR = {"|": UP, "F": RIGHT, "-": RIGHT, "7": DOWN,
             "J": LEFT, "L": UP}

CHANGE_DIR = {"F": {UP: RIGHT, LEFT: DOWN},
              "L": {DOWN: RIGHT, LEFT: UP},
              "J": {DOWN: LEFT, RIGHT: UP},
              "7": {RIGHT: DOWN, UP: LEFT}}

def star_2(path: str, start_char: str) -> int:
  grid = load_grid(path)
  grid.cells[grid.start] = start_char
  
  polygon = Polygon(verticies=[grid.start.clone()])

  p = None
  d = None
  while p != grid.start:
    if p == None:
      p = grid.start
      d = START_DIR[grid.cells[p]]
    p = p + d
    if CHANGE_DIR.get(grid.cells[p]):
      d = CHANGE_DIR[grid.cells[p]][d]
      polygon.verticies.append(p)

  #polygon.verticies.pop()
  #for v in polygon.verticies:
  #  print(v)

  #path = find_loop_path(grid)
  dump_grid(grid)

  print(polygon.area(), int(polygon.perimeter()))
  return polygon.area() + int(polygon.perimeter()/2) - 1

print()
print('Star 2:',star_2("sample_7.txt","F"))
print('Star 2:',star_2("sample.txt","F"))
print('Star 2:',star_2("sample_8.txt","F"))
print('Star 2:',star_2("sample_3.txt","F"))
print('Star 2:',star_2("sample_5.txt","F"))
print('Star 2:',star_2("sample_4.txt","F"))
#+END_SRC

#+RESULTS:
#+begin_example

Starting at x=1 y=1 z=0
......
......
..F7..
..LJ..
......
......
-1.0 4
Star 2: 0.0
Starting at x=1 y=1 z=0
.......
.......
..F-7..
..|.|..
..L-J..
.......
.......
-4.0 8
Star 2: -1.0
Starting at x=1 y=1 z=0
........
........
..F--7..
..|..|..
..L--J..
........
........
-6.0 10
Star 2: -2.0
Starting at x=1 y=1 z=0
.............
.............
..F-------7..
..|F-----7|..
..||.....||..
..||.....||..
..|L-7.F-J|..
..|..|.|..|..
..L--J.L--J..
.............
.............
-26.0 46
Star 2: -4.0
Starting at x=1 y=1 z=0
............
............
..F------7..
..|F----7|..
..||....||..
..||....||..
..|L-7F-J|..
..|..||..|..
..L--JL--J..
............
............
-25.0 44
Star 2: -4.0
Starting at x=12 y=4 z=0
......................
..F----7F7F7F7F-7.....
..|F--7||||||||FJ.....
..||.FJ||||||||L7.....
.FJL7L7LJLJ||LJ.L-7...
.L--J.L7...LJF7F-7L7..
.....F-J..F7FJ|L7L7L7.
.....L7.F7||L7|.L7L7|.
......|FJLJ|FJ|F7|.LJ.
.....FJL-7.||.||||....
.....L---J.LJ.LJLJ....
......................
77.0 140
Star 2: 146.0
#+end_example

#+begin_example

x=1 y=1 z=0
x=3 y=1 z=0
x=3 y=3 z=0
x=1 y=3 z=0
Starting at x=1 y=1 z=0
 012345
0......
1.F-7..
2.|.|..
3.L-J..
4......

tar 2: -4.0
#+end_example


22.5
.... x=1 y=3 z=0
.... x=1 y=4 z=0
.... x=8 y=3 z=0
.... x=8 y=4 z=0
Starting at x=0 y=0 z=0

#+begin_example
  0123456789
0 OOOOOOOOOO
1 O*──────┐O
2 O│┌────┐│O
3 O││....││O
4 O││....││O
5 O│└─┐┌─┘│O
6 O│..││..│O
7 O└──┘└──┘O
8 OOOOOOOOOO
Star 2: 12
#+end_example


Too High
Star 2: 616
