
* AOC 2023 Day 9

** Initialize 
#+BEGIN_SRC elisp
  (pyvenv-activate "~/projects/project_venv/")
  ; This is needed to make sure python indentation isn't messed up
  (setq org-src-preserve-indentation t)
#+END_SRC

#+RESULTS:
: t

** Load and validate data
*** Sample
|  0 |  3 |  6 |  9 | 12 | 15 |
|  1 |  3 |  6 | 10 | 15 | 21 |
| 10 | 13 | 16 | 21 | 30 | 45 |

** Day 9 star 1
*** Problem statement

If you find the next value for each history in this example and add
them together, you get 114.

Analyze your OASIS report and extrapolate the next value for each
history. What is the sum of these extrapolated values?

*** Solution
#+BEGIN_SRC python :session  :results value
result = []
try:
  def expand_line(line: str) -> list[int]:
    results = [[int(x) for x in line.split(' ') if x != ' ']]
    # Calculate differences
    while len([x for x in results[-1] if x == 0]) != len(results[-1]):
      results.append([int(results[-1][i])-int(results[-1][i-1])
                      for i in range(1,len(results[-1]))])

    results[-1].append(0)
    for i in range(len(results)-1, 0, -1):
      results[i-1].append(results[i-1][-1] + results[i][-1])
        
    return results
  
  def star_1(path: str) -> list[int]:
    results = []
    with open(path) as f:
      for line in f.read().split("\n"):
        if line:
          results.append(expand_line(line))

    return results

  result = sum(x[0][-1] for x in star_1("input.txt"))
except Exception as e:
  print("Error:",e)
  
result
#+END_SRC

** Day 9 star 2
*** Problem statement

If you find the next value for each history in this example and add
them together, you get 114.

Analyze your OASIS report and extrapolate the next value for each
history. What is the sum of these extrapolated values?

*** Solution
#+BEGIN_SRC python :session :results value
try:

  def expand_line(line: str) -> list[int]:
    results = [[int(x) for x in line.split(' ') if x != ' ']]
    # Calculate differences
    while len([x for x in results[-1] if x == 0]) != len(results[-1]):
      results.append([int(results[-1][i])-int(results[-1][i-1])
                      for i in range(1,len(results[-1]))])

    results[-1].insert(0,0)
    for i in range(len(results)-1, 0, -1):
      results[i-1].insert(0, results[i-1][0] - results[i][0])
        
    return results

  def star_2(path: str) -> int:
    results = []
    with open(path) as f:
      for line in f.read().split("\n"):
        if line:
          results.append(expand_line(line))

    return results

  result = sum(x[0][0] for x in star_2("input.txt"))
except Exception as e:
  print("Error:",e)
result
#+END_SRC

